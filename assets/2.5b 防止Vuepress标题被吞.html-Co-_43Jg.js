import{_ as i,c as a,d as e,o as n}from"./app-BQ4V10fd.js";const t={};function h(l,s){return n(),a("div",null,s[0]||(s[0]=[e(`<hr><h1 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h1><p>在Vuepress中，若一篇Markdown文章中有多个 <code># h1</code> 标题，则第一个标题会消失，即使已经指定了文章标题</p><h1 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法"><span>解决办法</span></a></h1><p>通过Markdown it插件解决，在文章开头加入分割线<br> 但是因为存在frontmatter(yaml)这种东西，处理原始内容不太方便。<br> 所以，反向思考，因为要处理的是 <code>h1</code> 的问题，所以在 <code>h1</code> 前面加入分割线就行。</p><blockquote><p>但是用<code>---</code>的话会和yaml冲突，所以用<code>***</code></p></blockquote><h1 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">md</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> originalRender</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> md</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    md</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">render</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> regex</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;"> /</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">^</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">(# </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">)/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> processedSrc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">regex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">***</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">match</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        });  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> originalRender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">md</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">processedSrc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    };  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const k=i(t,[["render",h]]),r=JSON.parse('{"path":"/20%20Area/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0/%E4%B8%BB%E5%8D%A1%E7%89%87/2.5b%20%E9%98%B2%E6%AD%A2Vuepress%E6%A0%87%E9%A2%98%E8%A2%AB%E5%90%9E.html","title":"2.5b 防止Vuepress标题被吞","lang":"zh-CN","frontmatter":{"category":["卡片/普通"],"date":"2024-10-19T00:00:00.000Z","isOriginal":true,"tags":["vuepress/theme-hope"],"title":"2.5b 防止Vuepress标题被吞","description":"背景 在Vuepress中，若一篇Markdown文章中有多个 # h1 标题，则第一个标题会消失，即使已经指定了文章标题 解决办法 通过Markdown it插件解决，在文章开头加入分割线 但是因为存在frontmatter(yaml)这种东西，处理原始内容不太方便。 所以，反向思考，因为要处理的是 h1 的问题，所以在 h1 前面加入分割线就行。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.5b 防止Vuepress标题被吞\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-08T00:59:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"耳朵同\\",\\"url\\":\\"http://blog.erduotong.com\\",\\"email\\":\\"erduotong@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.erduotong.com/20%20Area/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0/%E4%B8%BB%E5%8D%A1%E7%89%87/2.5b%20%E9%98%B2%E6%AD%A2Vuepress%E6%A0%87%E9%A2%98%E8%A2%AB%E5%90%9E.html"}],["meta",{"property":"og:site_name","content":"耳朵同的博客"}],["meta",{"property":"og:title","content":"2.5b 防止Vuepress标题被吞"}],["meta",{"property":"og:description","content":"背景 在Vuepress中，若一篇Markdown文章中有多个 # h1 标题，则第一个标题会消失，即使已经指定了文章标题 解决办法 通过Markdown it插件解决，在文章开头加入分割线 但是因为存在frontmatter(yaml)这种东西，处理原始内容不太方便。 所以，反向思考，因为要处理的是 h1 的问题，所以在 h1 前面加入分割线就行。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-08T00:59:20.000Z"}],["meta",{"property":"article:tag","content":"vuepress/theme-hope"}],["meta",{"property":"article:published_time","content":"2024-10-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-08T00:59:20.000Z"}]]},"git":{"createdTime":1754614760000,"updatedTime":1754614760000,"contributors":[{"name":"github-actions[bot]","username":"","email":"github-actions[bot]@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.6,"words":181},"filePathRelative":"20 Area/卡片笔记/主卡片/2.5b 防止Vuepress标题被吞.md","excerpt":"<hr>\\n<h1>背景</h1>\\n<p>在Vuepress中，若一篇Markdown文章中有多个 <code># h1</code> 标题，则第一个标题会消失，即使已经指定了文章标题</p>\\n<h1>解决办法</h1>\\n<p>通过Markdown it插件解决，在文章开头加入分割线<br>\\n但是因为存在frontmatter(yaml)这种东西，处理原始内容不太方便。<br>\\n所以，反向思考，因为要处理的是 <code>h1</code> 的问题，所以在 <code>h1</code> 前面加入分割线就行。</p>\\n<blockquote>\\n<p>但是用<code>---</code>的话会和yaml冲突，所以用<code>***</code></p>\\n</blockquote>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"20 Area/卡片笔记/主卡片/2.5b 防止Vuepress标题被吞.md","value":{"title":"2.5b 防止Vuepress标题被吞","path":"20 Area/卡片笔记/主卡片/2.5b 防止Vuepress标题被吞.md","outlink":[],"backlink":[]},"linkCount":0}],"links":[]}}}');export{k as comp,r as data};
